pipeline {
    agent {
        dockerfile {
            dir '.ci'
            label 'docker-executor'
        }
    }

    options {
        withAWS(
            endpointUrl: 'https://storage.kevinlin.info',
            credentials: 'storage-internal',
        )
    }

    stages {
        stage('Environment') {
            steps {
                s3Download(
                    bucket: 'internal',
                    path: 'resources/dotproxy/config.yaml',
                    file: 'config.yaml',
                )
            }
        }
        stage('Install') {
            steps {
                sh 'go get -d ./...'
            }
        }
        stage('Lint') {
            steps {
               sh 'make lint'
            }
        }
        stage('Build') {
            environment {
                VERSION_SHA = "${GIT_COMMIT}"
            }
            parallel {
                stage('linux/amd64') {
                    environment {
                        GOOS = 'linux'
                        GOARCH = 'amd64'
                    }
                    steps {
                        sh 'make'
                    }
                }
                stage('linux/arm') {
                    environment {
                        GOOS = 'linux'
                        GOARCH = 'arm'
                    }
                    steps {
                        sh 'make'
                    }
                }
            }
        }
        stage('Release') {
            steps {
                sh 'tar -cvzf release.tar.gz bin/ init/ config.yaml'
                s3Upload(
                    bucket: 'internal',
                    path: "deploy/${env.JOB_NAME}/${env.GIT_COMMIT}/",
                    file: 'release.tar.gz',
                )
            }
        }
        stage('Deploy') {
            steps {
                // Switch to the static branch
                sh 'git fetch --all'
                sh 'git checkout -f static'
                sh 'git reset --hard origin/static'

                // Clean working directory
                sh 'git rm -rf .'
                sh 'git clean -fxd'

                // Download release archive
                s3Download(
                    bucket: 'internal',
                    path: "deploy/${env.JOB_NAME}/${env.GIT_COMMIT}/release.tar.gz",
                    file: 'release.tar.gz',
                )
                sh 'tar xvf release.tar.gz'
                sh 'rm release.tar.gz'

                // Create release directory
                sh "mkdir -p releases/${GIT_COMMIT}/"
                sh "ln -sf ${GIT_COMMIT} releases/_latest"
                sh "mv bin/* releases/${GIT_COMMIT}/"
                sh 'git add releases/'
                sh 'git clean -fxd'

                // Generate page index
                sh 'apindex .'

                // Commit and push
                sh 'git add -A'
                sh "git commit --no-verify -m \"[automatic commit] ${GIT_BRANCH}:${GIT_COMMIT}\" || :"
                sh 'git remote add github git@github.com:LINKIWI/dotproxy.git'
                sh 'git push origin HEAD'
                sh 'git push github HEAD:gh-pages'
            }
        }
    }
}
